global
    log stdout format raw local0 debug

    ssl-default-bind-options ssl-min-ver TLSv1.2
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256

defaults
    log global
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    option httplog
    default-server resolve-prefer ipv4

resolvers dns
    nameserver cloudflare1 1.1.1.1:53
    nameserver cloudflare2 1.0.0.1:53
    nameserver google1 8.8.8.8:53
    nameserver google2 8.8.4.4:53
    accepted_payload_size 8192

frontend registry
    bind *:443 ssl crt "/etc/letsencrypt/live/$MIRROR_DOMAIN/haproxy.pem"

    acl ACL_registry hdr(host) -i "$MIRROR_DOMAIN"
    acl ACL_auth hdr(host) -i auth."$MIRROR_DOMAIN"
    acl is_root path /
    acl is_401 status 401

    http-request redirect code 301 location https://github.com/Yurzs/mirror.docker.yurzs.dev if ACL_registry is_root

    http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"
    http-response set-header www-authenticate "Bearer realm=\"https://auth.$MIRROR_DOMAIN/token\",service=\"$MIRROR_DOMAIN\"" if is_401

    use_backend registry_backend if ACL_registry
    use_backend registry_auth if ACL_auth

backend registry_backend
    http-request set-header Host registry-1.docker.io
    server docker_io registry-1.docker.io:443 sni str(registry-1.docker.io) check-ssl resolvers dns ssl verify none

backend registry_auth
    http-request set-header Host auth.docker.io
    http-request set-query scope=%[urlp(scope)]&service=registry.docker.io
    server auth_docker_io auth.docker.io:443 sni str(auth.docker.io) check-ssl resolvers dns ssl verify none
