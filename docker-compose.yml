# syntax=docker/docker-compose:1.0.0
---

name: mirror-docker

x-common-envs: &common-envs
  MIRROR_DOMAIN: ${MIRROR_DOMAIN}
  HAPROXY_ADMIN_PORT: 9999
  HAPROXY_CRT_LIST: /etc/letsencrypt/haproxy.crt.list

services:
  haproxy:
    image: haproxy:latest
    container_name: ${COMPOSE_PROJECT_NAME}-haproxy
    restart: on-failure
    user: root
    ports:
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./haproxy.pem:/etc/letsencrypt/live/dummy.pem:ro
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./haproxy.crt.list:/usr/local/etc/haproxy/haproxy.crt.list:ro
    environment:
      <<: *common-envs
  certbot:
    container_name: ${COMPOSE_PROJECT_NAME}-certbot
    image: certbot/certbot:latest
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./hook:/etc/letsencrypt/renewal-hooks/post/haproxy:ro
      - ./haproxy.crt.list:/etc/letsencrypt/haproxy.crt.list
    ports:
      - "80:80"
    environment:
      <<: *common-envs
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
