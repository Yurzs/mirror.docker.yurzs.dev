# syntax=docker/docker-compose:1.0.0
---

name: mirror-docker

x-common-env: &common-env
  MIRROR_DOMAIN: ${MIRROR_DOMAIN:?MIRROR_DOMAIN is required}

services:
  haproxy:
    image: haproxy:latest
    container_name: ${COMPOSE_PROJECT_NAME}-haproxy
    restart: on-failure
    user: root
    ports:
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - "./crts:/usr/local/etc/haproxy/crts/$MIRROR_DOMAIN:ro"
    environment:
      <<: *common-env
  certbot:
    container_name: ${COMPOSE_PROJECT_NAME}-certbot
    image: ghcr.io/yurzs/certbot:haproxy
    pull_policy: always
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /etc/letsencrypt/renewal-hooks/post/
      - "./crts:/usr/local/etc/haproxy/crts/$MIRROR_DOMAIN"
    ports:
      - "80:80"
    environment:
      <<: *common-env
    command: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
